{"version":3,"sources":["components/common/Drawer.jsx","components/NavBar.jsx","components/common/Accordion.jsx","components/common/UIPagination.jsx","components/Movies.jsx","utils/paginate.js","components/Dashboard.jsx","components/NotFound.jsx","App.js","theme.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","list","width","Drawer","open","pages","handleOpen","handleClose","onSelectPage","classes","anchor","onOpen","onClose","className","role","List","map","item","pageName","pageURL","pageIcon","ListItem","onClick","button","ListItemIcon","ListItemText","primary","prototype","PropTypes","bool","isRequired","object","func","theme","root","flexGrow","height","header","background","boxShadow","color","palette","type","menuButton","marginRight","spacing","title","useTooltipStyles","arrow","common","black","tooltip","backgroundColor","padding","TooltipWithStyles","props","Tooltip","withRouter","appTheme","baseURL","history","location","useTheme","isMobile","useMediaQuery","breakpoints","down","React","useState","anchorEl","setAnchorEl","Boolean","selected","pathname","setPages","handleDrawer","event","handlePageChange","newpages","i","push","AppBar","position","Toolbar","Typography","variant","IconButton","edge","aria-label","url","page","ranking","fontSize","typography","pxToRem","flexBasis","flexShrink","movieName","text","secondary","rating","image","margin","Accordion","data","expanded","setExpanded","panel","movie_name","year","summary","genres","release_date","movie_length","poster_image","onChange","isExpanded","AccordionSummary","aria-controls","id","AccordionDetails","Grid","container","xs","src","alt","filter","genre","join","href","target","rel","marginTop","UIPagination","count","onPageChange","Pagination","shape","showFirstButton","showLastButton","value","Movies","state","movies","timeStamp","currentPage","pageSize","setState","imdb_movies","this","allMovies","items","pageNumber","startIndex","_","slice","take","paginate","length","Component","DashBoard","NotFound","App","Fragment","exact","path","render","Dashboard","component","to","createMuiTheme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.b98dc1c5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    SwipeableDrawer as MUIDrawer,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemIcon,\r\n    makeStyles,\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nconst Drawer = ({ open, pages, handleOpen, handleClose, onSelectPage }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <MUIDrawer\r\n            open={open}\r\n            anchor=\"right\"\r\n            onOpen={handleOpen}\r\n            onClose={handleClose}\r\n        >\r\n            <div className={classes.list} role=\"presentation\">\r\n                <List>\r\n                    {pages.map((item) => {\r\n                        const { pageName, pageURL, pageIcon } = item;\r\n                        return (\r\n                            <ListItem\r\n                                onClick={() => onSelectPage(pageURL)}\r\n                                button\r\n                                key={pageName}\r\n                            >\r\n                                <ListItemIcon>{pageIcon}</ListItemIcon>\r\n                                <ListItemText primary={pageName} />\r\n                            </ListItem>\r\n                        );\r\n                    })}\r\n                </List>\r\n            </div>\r\n        </MUIDrawer>\r\n    );\r\n};\r\n\r\nDrawer.prototype = {\r\n    open: PropTypes.bool.isRequired,\r\n    pages: PropTypes.object.isRequired,\r\n    handleOpen: PropTypes.func.isRequired,\r\n    handleClose: PropTypes.func.isRequired,\r\n    onSelectPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Drawer;\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n    AppBar,\r\n    IconButton,\r\n    makeStyles,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography,\r\n    useMediaQuery,\r\n    useTheme,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport MovieIcon from \"@material-ui/icons/Movie\";\r\nimport Drawer from \"./common/Drawer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 70,\r\n    },\r\n    header: {\r\n        background: \"white\",\r\n        boxShadow: \"0px 0px 0px 0px\",\r\n        color: theme.palette.type === \"light\" ? \"black\" : \"white\",\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst useTooltipStyles = makeStyles((theme) => ({\r\n    arrow: {\r\n        color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n        backgroundColor: theme.palette.common.black,\r\n        padding: 10,\r\n    },\r\n}));\r\n\r\nfunction TooltipWithStyles(props) {\r\n    const classes = useTooltipStyles();\r\n    return <Tooltip arrow classes={classes} {...props} />;\r\n}\r\n\r\nconst NavBar = ({ appTheme, baseURL, history, location }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    let [pages, setPages] = useState([\r\n        {\r\n            pageName: \"Home\",\r\n            pageURL: \"/\",\r\n            pageIcon: <HomeIcon />,\r\n            selected:\r\n                location.pathname === `${baseURL}` ||\r\n                location.pathname === `${baseURL}/`\r\n                    ? true\r\n                    : false,\r\n        },\r\n        {\r\n            pageName: \"Movies\",\r\n            pageURL: \"/movies\",\r\n            pageIcon: <MovieIcon />,\r\n            selected: location.pathname === `${baseURL}/movies` ? true : false,\r\n        },\r\n    ]);\r\n\r\n    const handleDrawer = (event) => {\r\n        setAnchorEl(\"open\");\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handlePageChange = (pageURL, pageName) => {\r\n        let newpages = [...pages];\r\n        for (var i in newpages) {\r\n            newpages[i].selected = false;\r\n            if (newpages[i].pageName === pageName) newpages[i].selected = true;\r\n        }\r\n        setPages(pages);\r\n\r\n        history.push(`${baseURL}${pageURL}`);\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\" className={classes.header}>\r\n                <Toolbar>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        className={classes.title}\r\n                        onClick={() => handlePageChange(\"/\")}\r\n                    >\r\n                        Placeholder\r\n                    </Typography>\r\n                    {isMobile ? (\r\n                        <div>\r\n                            <IconButton\r\n                                edge=\"start\"\r\n                                className={classes.menuButton}\r\n                                color=\"inherit\"\r\n                                aria-label=\"menu\"\r\n                                onClick={handleDrawer}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <Drawer\r\n                                open={open}\r\n                                handleOpen={handleDrawer}\r\n                                handleClose={handleDrawerClose}\r\n                                pages={pages}\r\n                                onSelectPage={(url) => handlePageChange(url)}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            {pages.map((page) => (\r\n                                <TooltipWithStyles\r\n                                    key={page.pageName}\r\n                                    title={page.pageName}\r\n                                >\r\n                                    <IconButton\r\n                                        color={\r\n                                            !page.selected\r\n                                                ? \"inherit\"\r\n                                                : \"primary\"\r\n                                        }\r\n                                        className={classes.menuButton}\r\n                                        onClick={() =>\r\n                                            handlePageChange(\r\n                                                page.pageURL,\r\n                                                page.pageName\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        {page.pageIcon}\r\n                                    </IconButton>\r\n                                </TooltipWithStyles>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(NavBar);\r\n","import React from \"react\";\r\nimport {\r\n    Accordion as MUIAccordion,\r\n    AccordionDetails,\r\n    AccordionSummary,\r\n    Grid,\r\n    makeStyles,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n    },\r\n    ranking: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: \"5%\",\r\n        flexShrink: 0,\r\n    },\r\n    movieName: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n        flexBasis: \"85%\",\r\n        flexShrink: 0,\r\n    },\r\n    rating: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    image: {\r\n        margin: 10,\r\n        width: \"80%\",\r\n    },\r\n}));\r\n\r\nconst Accordion = ({ data }) => {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {data.map((item) => {\r\n                const {\r\n                    ranking,\r\n                    movie_name,\r\n                    url,\r\n                    year,\r\n                    rating,\r\n                    // vote_count,\r\n                    summary,\r\n                    // production,\r\n                    // director,\r\n                    // writers,\r\n                    genres,\r\n                    release_date,\r\n                    // censor_rating,\r\n                    movie_length,\r\n                    // country,\r\n                    // language,\r\n                    // budget,\r\n                    // gross_worldwide,\r\n                    // gross_usa,\r\n                    // opening_week_usa,\r\n                    poster_image,\r\n                } = item;\r\n                return (\r\n                    <MUIAccordion\r\n                        key={movie_name}\r\n                        expanded={expanded === `panel${ranking}`}\r\n                        onChange={handleChange(`panel${ranking}`)}\r\n                    >\r\n                        <AccordionSummary\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                        >\r\n                            <Typography className={classes.ranking}>\r\n                                {ranking}\r\n                            </Typography>\r\n                            <Typography className={classes.movieName}>\r\n                                {movie_name}\r\n                            </Typography>\r\n                            <Typography className={classes.rating}>\r\n                                {`${rating} / 10`}&nbsp;\r\n                                <i className=\"fa fa-star\"></i>\r\n                            </Typography>\r\n                        </AccordionSummary>\r\n\r\n                        <AccordionDetails>\r\n                            <Grid container>\r\n                                <Grid item xs={4}>\r\n                                    <img\r\n                                        src={poster_image}\r\n                                        alt={`${movie_name} poster`}\r\n                                        className={classes.image}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={8}>\r\n                                    <Typography>\r\n                                        {`${year} | ${movie_length} | ${genres\r\n                                            .filter((genre) => {\r\n                                                return genre !== \" \";\r\n                                            })\r\n                                            .join(\", \")} | ${release_date} | `}\r\n                                        <a\r\n                                            href={url}\r\n                                            target=\"_blank\"\r\n                                            rel=\"noopener noreferrer\"\r\n                                        >\r\n                                            Link\r\n                                        </a>\r\n                                    </Typography>\r\n                                    <Typography>{summary}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </AccordionDetails>\r\n                    </MUIAccordion>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& > * + *\": {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nconst UIPagination = ({ count, page, onPageChange }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className=\"row\">\r\n                <Pagination\r\n                    count={count}\r\n                    page={page}\r\n                    shape=\"rounded\"\r\n                    color=\"primary\"\r\n                    showFirstButton\r\n                    showLastButton\r\n                    onChange={(event, value) => onPageChange(event, value)}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UIPagination;\r\n","import React, { Component } from \"react\";\r\nimport data from \"./../data/imdb_movies_data.json\";\r\nimport Accordion from \"./common/Accordion\";\r\nimport UIPagination from \"./common/UIPagination\";\r\nimport { paginate } from \"../utils/paginate\";\r\n\r\nclass Movies extends Component {\r\n    state = {\r\n        movies: [],\r\n        timeStamp: \"\",\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { timeStamp, imdb_movies: movies } = data;\r\n        this.setState({\r\n            movies,\r\n            timeStamp,\r\n        });\r\n    }\r\n\r\n    handlePageChange = (event, value) => {\r\n        this.setState({ currentPage: value });\r\n    };\r\n\r\n    render() {\r\n        const { movies: allMovies, currentPage, pageSize } = this.state;\r\n        const movies = paginate(allMovies, currentPage, pageSize);\r\n        return (\r\n            <div>\r\n                <UIPagination\r\n                    count={allMovies.length / pageSize}\r\n                    page={currentPage}\r\n                    onPageChange={this.handlePageChange}\r\n                />\r\n                <br />\r\n                <Accordion data={movies} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass DashBoard extends Component {\r\n    render() {\r\n        return <div>This is the dashboard</div>;\r\n    }\r\n}\r\n\r\nexport default DashBoard;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n    return <h1>404: Page not found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport NavBar from \"./components/NavBar\";\nimport Movies from \"./components/Movies\";\nimport Dashboard from \"./components/Dashboard\";\nimport NotFound from \"./components/NotFound\";\n\nclass App extends Component {\n    state = {\n        baseURL: \"/imdb-analytics-app\",\n    };\n    render() {\n        const { baseURL } = this.state;\n        return (\n            <React.Fragment>\n                <NavBar baseURL={baseURL} />\n                <main className=\"container\">\n                    <Switch>\n                        <Route\n                            exact\n                            path={`${baseURL}/`}\n                            render={(props) => <Dashboard {...props} />}\n                        />\n                        <Route\n                            exact\n                            path={`${baseURL}/movies`}\n                            render={(props) => <Movies {...props} />}\n                        />\n                        <Route\n                            path={`${baseURL}/not-found`}\n                            component={NotFound}\n                        />\n                        <Redirect to={`${baseURL}/not-found`} />\n                    </Switch>\n                </main>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({});\r\n\r\nexport default theme;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport App from \"./App\";\nimport theme from \"./theme\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <ThemeProvider theme={theme}>\n            <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}