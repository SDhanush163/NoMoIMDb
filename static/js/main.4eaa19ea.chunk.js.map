{"version":3,"sources":["components/NavBar.jsx","components/Movies.jsx","components/Dashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","header","background","color","boxShadow","menuButton","marginRight","spacing","title","useTooltipStyles","arrow","palette","common","black","tooltip","backgroundColor","padding","TooltipWithStyles","props","classes","Tooltip","withRouter","history","React","useState","anchorEl","setAnchorEl","open","Boolean","useTheme","isMobile","useMediaQuery","breakpoints","down","handlePageChange","pageURL","push","className","AppBar","position","Toolbar","Typography","variant","onClick","IconButton","edge","aria-label","event","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","disableElevation","Movies","Component","DashBoard","App","Fragment","exact","path","render","Dashboard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4eaa19ea.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n    AppBar,\r\n    IconButton,\r\n    makeStyles,\r\n    Menu,\r\n    MenuItem,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography,\r\n    useMediaQuery,\r\n    useTheme,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport MovieIcon from \"@material-ui/icons/Movie\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    header: {\r\n        background: \"transparent\",\r\n        color: \"black\",\r\n        boxShadow: \"0px 0px 0px 0px\",\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst useTooltipStyles = makeStyles((theme) => ({\r\n    arrow: {\r\n        color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n        backgroundColor: theme.palette.common.black,\r\n        padding: 10,\r\n    },\r\n}));\r\n\r\nfunction TooltipWithStyles(props) {\r\n    const classes = useTooltipStyles();\r\n    return <Tooltip arrow classes={classes} {...props} />;\r\n}\r\n\r\nconst NavBar = ({ history }) => {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const theme = useTheme();\r\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handlePageChange = (pageURL) => {\r\n        history.push(pageURL);\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.header}>\r\n                <Toolbar>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        className={classes.title}\r\n                        onClick={() => handlePageChange(\"/\")}\r\n                    >\r\n                        Placeholder\r\n                    </Typography>\r\n                    <IconButton color=\"inherit\" className={classes.menuButton}>\r\n                        <Brightness4Icon />\r\n                    </IconButton>\r\n                    {isMobile ? (\r\n                        <div>\r\n                            <IconButton\r\n                                edge=\"start\"\r\n                                className={classes.menuButton}\r\n                                color=\"inherit\"\r\n                                aria-label=\"menu\"\r\n                                onClick={handleMenu}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorEl}\r\n                                anchorOrigin={{\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"right\",\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"right\",\r\n                                }}\r\n                                open={open}\r\n                                onClose={() => setAnchorEl(null)}\r\n                            >\r\n                                <MenuItem onClick={() => handlePageChange(\"/\")}>\r\n                                    Home\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    onClick={() => handlePageChange(\"/movies\")}\r\n                                >\r\n                                    Movies\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <TooltipWithStyles title=\"Home\">\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    className={classes.menuButton}\r\n                                    onClick={() => handlePageChange(\"/\")}\r\n                                    disableElevation\r\n                                >\r\n                                    <HomeIcon />\r\n                                </IconButton>\r\n                            </TooltipWithStyles>\r\n                            <TooltipWithStyles title=\"Movies\">\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    className={classes.menuButton}\r\n                                    onClick={() => handlePageChange(\"/movies\")}\r\n                                    disableElevation\r\n                                >\r\n                                    <MovieIcon />\r\n                                </IconButton>\r\n                            </TooltipWithStyles>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(NavBar);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Movies extends Component {\r\n    render() {\r\n        return <div>This is a component for movies list</div>;\r\n    }\r\n}\r\n\r\nexport default Movies;\r\n","import React, { Component } from \"react\";\r\n\r\nclass DashBoard extends Component {\r\n    render() {\r\n        return <div>This is the dashboard</div>;\r\n    }\r\n}\r\n\r\nexport default DashBoard;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport NavBar from \"./components/NavBar\";\nimport Movies from \"./components/Movies\";\nimport Dashboard from \"./components/Dashboard\";\n\nclass App extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <NavBar />\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/\"\n                        render={(props) => <Dashboard {...props} />}\n                    />\n                    <Route\n                        exact\n                        path=\"/movies\"\n                        render={(props) => <Movies {...props} />}\n                    />\n                </Switch>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}